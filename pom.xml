<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tagetik.reporting.analytics</groupId>
	<artifactId>tgkr-backendforfrontend</artifactId>
	<version>0.6.0</version>  <!-- tag version, do not remove or move this comment -->
	<packaging>pom</packaging>

	<name>Backendforfrontend Api</name>
	<description>Reporting 2.0:Backendforfrontend Api</description>

	<organization>
		<url>https://www.tagetik.com</url>
		<name>Tagetik</name>
	</organization>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<!--
        This options is useful to include environment variables in resources (see https://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html)
        -->
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${sourceVersion}</source>
						<target>${targetVersion}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>com.github.therapi</groupId>
								<artifactId>therapi-runtime-javadoc-scribe</artifactId>
								<version>${swagger-runtime-javadoc.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>

				<!-- To generate source jar archive of the source files of the current project -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Provides tooling to release a project with Maven -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>

				<!-- Provides tooling to check version in a project -->
				<plugin>
					<artifactId>versions-maven-plugin</artifactId>
					<groupId>org.codehaus.mojo</groupId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<onlyProjectDependencies>true</onlyProjectDependencies>
					</configuration>
				</plugin>

				<!-- Provides the capability to build jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
							<manifestEntries>
								<Build-Time>${timestamp}</Build-Time>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- Checks for banned dependencies and scopes -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.6.1</version>
									</requireMavenVersion>
								</rules>
							</configuration>
							<goals>
								<goal>enforce</goal>
							</goals>
							<id>enforce-maven</id>
						</execution>
						<execution>
							<id>enforce-banned-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>compile</phase>
							<configuration>
								<rules>
									<bannedDependencies>
										<excludes>
											<exclude>org.mockito:mockito-core:*:*:compile</exclude>
										</excludes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- For javadoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<finalName>${project.name}-${project.version}</finalName>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<artifactId>checkstyle</artifactId>
							<groupId>com.puppycrawl.tools</groupId>
							<version>8.41</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<configuration>
								<configLocation>./config/checkstyle.xml</configLocation>
								<consoleOutput>false</consoleOutput>
								<failOnViolation>true</failOnViolation>
								<!-- Livello minimo che fa fallire la compilazione -->
								<includeTestSourceDirectory>true</includeTestSourceDirectory>
								<!-- Include anche la cartella di test nel controllo -->
								<logViolationsToConsole>true</logViolationsToConsole>
								<!-- Stampa su console le violazioni -->
								<violationSeverity>error</violationSeverity>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${project.basedir}/src/it/java</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-resource</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>add-test-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>${project.basedir}/src/it/resources</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Unit Tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>

				<!-- IT Tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<executions>
						<execution>
							<id>failsafe-integration-tests</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>failsafe-verify</id>
							<phase>verify</phase>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springdoc</groupId>
					<artifactId>springdoc-openapi-maven-plugin</artifactId>
					<version>${springdoc-openapi-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>
			<plugin>
				<artifactId>versions-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>build-helper-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>

			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
			</plugin>
		</plugins>
	</build>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
		<sourceVersion>${java.version}</sourceVersion>
		<targetVersion>${java.version}</targetVersion>
		<maven.build.timestamp.format>dd_MMM_yyyy_hh_mm_aa</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
		<skipITTests>false</skipITTests>
		<skipSecureChecks>true</skipSecureChecks>
		<skipDocGeneration>true</skipDocGeneration>
		<prj.sonar.coverage.basedir>${project.basedir}/../tgkr-backendforfrontend-sonar-report</prj.sonar.coverage.basedir>
		<failBuildOnCVSS>7</failBuildOnCVSS>
		<owaspDependencyCheckVersion>10.0.2</owaspDependencyCheckVersion>

		<!-- Dependency plugin versions -->
		<jacoco.plugin.version>0.8.10</jacoco.plugin.version>
		<build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
		<maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
		<maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
		<maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
		<maven-install-plugin.version>3.1.1</maven-install-plugin.version>
		<maven-jar-plugin.version>3.4.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
		<maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>
		<maven-release-plugin.version>3.0.1</maven-release-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-site-plugin.version>4.0.0-M13</maven-site-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
		<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
		<spring-boot-maven-plugin.version>3.2.4</spring-boot-maven-plugin.version>
		<versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
		<springdoc-openapi-maven-plugin.version>1.4</springdoc-openapi-maven-plugin.version>
		<springdoc-swagger-ui.version>2.5.0</springdoc-swagger-ui.version>
		<swagger-runtime-javadoc.version>0.15.0</swagger-runtime-javadoc.version>


		<!-- Dependency versions -->
		<assertj.version>3.25.3</assertj.version>
		<aws-java-sdk.version>2.25.33</aws-java-sdk.version>
		<commons-lang.version>3.14.0</commons-lang.version>
		<junit.version>5.10.2</junit.version>
		<mockito.version>5.11.0</mockito.version>
		<slf4j.version>2.0.13</slf4j.version>
		<spring.boot.version>3.2.4</spring.boot.version>
		<spring-boot-dependencies.version>3.2.4</spring-boot-dependencies.version>
		<testcontainers.version>1.20.1</testcontainers.version>
		<lombok.version>1.18.32</lombok.version>
		<tgkr-common-library.version>1.4.4</tgkr-common-library.version>
		<nimbus-jose-jwt.version>9.37.3</nimbus-jose-jwt.version>
		<modelmapper.version>3.2.0</modelmapper.version>
		<embedded-redis.version>0.7.3</embedded-redis.version>
		<redis.clients.jedis.version>5.2.0</redis.clients.jedis.version>
		<spring.cloud.k8s.version.version>3.1.3</spring.cloud.k8s.version.version>
		<spring-cloud-aws.version>3.1.1</spring-cloud-aws.version>
		<rbac-builder-client.version>0.1.0</rbac-builder-client.version>
	</properties>

	<dependencyManagement>
		<!--Any dependency here will be added to  pom child if it adds specific dependency-->
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-common-tenant-provisioning-aws-adapter</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-common-security</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>

			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-common-secrets</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>

			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-common-naming</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>

			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-common-utils</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>tgkr-datasource-jdbc-adapter</artifactId>
				<version>${tgkr-common-library.version}</version>
			</dependency>

			<!-- Spring Cloud AWS BOM -->

			<!-- RBAC Client Dependencies-->
			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>reporting-be-java-rbac-builder-client-api</artifactId>
				<version>${rbac-builder-client.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tagetik.reporting.analytics</groupId>
				<artifactId>reporting-be-java-rbac-builder-client-autoconfigure</artifactId>
				<version>${rbac-builder-client.version}</version>
			</dependency>
			<!-- TEST DEPENDENCY-->
			<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>localstack</artifactId>
				<version>${testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<!--embedded redis-->
			<dependency>
				<groupId>it.ozimov</groupId>
				<artifactId>embedded-redis</artifactId>
				<version>${embedded-redis.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-simple</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!--NOT embedded redis-->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${redis.clients.jedis.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!--Any dependency here will be added to any pom child-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-client-config</artifactId>
			<version>${spring.cloud.k8s.version.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<!-- <dependency>
       <groupId>io.github.resilience4j</groupId>
       <artifactId>resilience4j-spring-boot2</artifactId>
       <version>2.2.0</version>
     </dependency>-->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot3</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
			<version>3.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-common-tenant-provisioning</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-common-security</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-common-secrets</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-common-naming</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-common-utils</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>tgkr-datasource-jdbc-adapter</artifactId>
			<version>${tgkr-common-library.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmapper.version}</version>
		</dependency>

		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus-jose-jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-swagger-ui.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.therapi</groupId>
			<artifactId>therapi-runtime-javadoc</artifactId>
			<version>${swagger-runtime-javadoc.version}</version>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>aws-sdk-java</artifactId>
			<version>${aws-java-sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>io.awspring.cloud</groupId>
			<artifactId>spring-cloud-aws-dependencies</artifactId>
			<version>${spring-cloud-aws.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>com.tagetik.reporting.analytics</groupId>
			<artifactId>reporting-be-java-rbac-builder-client-aws-starter</artifactId>
			<version>${rbac-builder-client.version}</version>
		</dependency>

		<!--     Test dependencies-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>24.0.1</version>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<!-- For development environment and phases -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<skipTests>false</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- For remote environment -->
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- For AWS environment -->
			<id>aws</id>
			<properties>
				<spring.profiles.active>aws</spring.profiles.active>
			</properties>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>software.amazon.awssdk</groupId>
						<artifactId>aws-sdk-java</artifactId>
						<version>${aws-java-sdk.version}</version>
					</dependency>
					<dependency>
						<groupId>io.awspring.cloud</groupId>
						<artifactId>spring-cloud-aws-dependencies</artifactId>
						<version>${spring-cloud-aws.version}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>com.tagetik.reporting.analytics</groupId>
						<artifactId>reporting-be-java-rbac-builder-client-aws-starter</artifactId>
						<version>${rbac-builder-client.version}</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>software.amazon.awssdk</groupId>
					<artifactId>aws-sdk-java</artifactId>
				</dependency>
				<dependency>
					<groupId>com.tagetik.reporting.analytics</groupId>
					<artifactId>reporting-be-java-rbac-builder-client-aws-starter</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<skipTests>false</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>
		<profile>
			<!-- For Azure environment -->
			<id>azure</id>
		</profile>

		<profile>
			<!-- To disable IT -->
			<id>disable-integration-test</id>
			<properties>
				<skipITTests>true</skipITTests>
			</properties>
		</profile>

		<profile>
			<!-- To enable OpenApi Doc Generation -->
			<id>enable-openapi-doc-gen</id>
			<properties>
				<skipDocGeneration>false</skipDocGeneration>
			</properties>
		</profile>

		<profile>
			<!-- To enable secure checks -->
			<id>enable-secure-checks</id>
			<properties>
				<skipSecureChecks>false</skipSecureChecks>
			</properties>
		</profile>

		<profile>
			<id>sonarqube</id>
			<properties>
				<JAVA_LOCAL>${env.JAVA_HOME}</JAVA_LOCAL>
				<sonar.projectName>Reporting2.0:Backendforfrontend</sonar.projectName>
				<sonar.coverage.exclusions>
					**/shareddomain/**,
					**/com/tagetik/**/config/**/*,
					**/com/tagetik/**/model/**/*,
					**/com/tagetik/**/properties/**/*,
					**/com/tagetik/**/exceptions/**/*,
					**/com/tagetik/**/exception/**/*
				</sonar.coverage.exclusions>
				<sonar.cpd.exclusions/>
				<sonar.exclusions/>
				<sonar.test.exclusions>**/*.java</sonar.test.exclusions>
				<sonar.coverage.jacoco.xmlReportPaths>${prj.sonar.coverage.basedir}/target/final-report/jacoco.xml
				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
				<sonar.language>java</sonar.language>
				<sonar.ws.timeout>86400</sonar.ws.timeout>
			</properties>

			<build>
				<plugins>
					<!-- Sonar -->
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>${sonar-maven-plugin.version}</version>
					</plugin>


					<!-- JACOCO - code coverage -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-unit-tests</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-output/jacoco-uts.exec</destFile>
								</configuration>
							</execution>

							<execution>
								<id>generate-unit-test-report</id>
								<phase>install</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-output/jacoco-uts.exec</dataFile>
									<outputDirectory>${project.build.directory}/reports/uts</outputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>prepare-integration-tests</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-output/jacoco-its.exec</destFile>
								</configuration>
							</execution>

							<execution>
								<id>generate-integration-test-report</id>
								<phase>install</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-output/jacoco-its.exec</dataFile>
									<outputDirectory>${project.build.directory}/reports/its</outputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>merge-unit-tests-and-integration-tests</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}/jacoco-output/</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/jacoco-output/aggregation/aggregate.exec</destFile>
								</configuration>
							</execution>

							<execution>
								<id>generate-merged-report</id>
								<phase>install</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-output/aggregation/aggregate.exec</dataFile>
									<outputDirectory>${project.build.directory}/reports/global</outputDirectory>
								</configuration>
							</execution>


						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<artifactId>dependency-check-maven</artifactId>
				<groupId>org.owasp</groupId>
				<reportSets>
					<reportSet>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
				<version>${owaspDependencyCheckVersion}</version>
			</plugin>
		</plugins>
	</reporting>

</project>